<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ProductApi</name>
    </assembly>
    <members>
        <member name="M:ProductApi.Controllers.V1.CategoryController.GetCategories">
            <summary>
            Gets the list of all categories.
            </summary>
            <remarks>
            Sample request:
            
                GET api/categories
            </remarks>
            <returns>A list of categories.</returns>
            <response code="200">Returns the list of categories.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.CategoryController.GetCategory(System.Guid)">
            <summary>
            Retrieves a specific category by its unique identifier.
            </summary>
            <remarks>
            Sample request:
            
                GET api/categories/8bc454b9-a196-431d-8980-d41df332dc70
            </remarks>
            <param name="categoryId">The ID of the category to retrieve.</param>
            <returns>The requested category.</returns>
            <response code="200">Returns the requested category.</response>
            <response code="404">If the category with the given ID is not found.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.CategoryController.CreateCategory(ProductApi.Shared.Model.CategoryDtos.CreateCategoryDto)">
            <summary>
            Creates a new category
            </summary>
            <remarks>
            Sample request:
            
                POST api/categories
                {        
                    "categoryName ": "rockets"   
                }
            </remarks>
            <param name="category"></param>
            <returns>A newly created category</returns>
            <response code="201">Returns the newly created item.</response>
            <response code="400">If the item is null.</response>
            <response code="422">If the model is invalid.</response>
            <response code="401">If the request lacks valid authentication credentials.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.CategoryController.UpdateCategory(System.Guid,ProductApi.Shared.Model.CategoryDtos.UpdateCategoryDto)">
            <summary>
            Updates a specific category by its unique identifier.
            </summary>
            <remarks>
            Sample request:
            
                PUT api/categories/8bc454b9-a196-431d-8980-d41df332dc70
                {        
                  "categoryName ": "rockets"         
                }
            </remarks>
            <param name="categoryId">The ID of the category to update.</param>
            <param name="category">The updated category information.</param>
            <returns>The updated category.</returns>
            <response code="204">If the category is successfully updated.</response>
            <response code="400">If the updated category is null.</response>
            <response code="404">If the category with the given ID is not found.</response>
            <response code="422">If the model is invalid or the category information is incomplete.</response>
            <response code="401">If the request lacks valid authentication credentials.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.CategoryController.DeleteCategory(System.Guid)">
            <summary>
            Deletes a specific category by its unique identifier.
            </summary>
            <remarks>
            Sample request:
            
                DELETE api/categories/8bc454b9-a196-431d-8980-d41df332dc70
            </remarks>
            <param name="categoryId">The ID of the category to delete.</param>
            <returns>No content if successful, otherwise returns an error message.</returns>
            <response code="204">If the category is successfully deleted.</response>
            <response code="404">If the category with the given ID is not found.</response>
            <response code="401">If the request lacks valid authentication credentials.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.CategoryController.GetCategoryOptions">
            <summary>
            Returns an Allow header containing the allowable HTTP methods.
            </summary>
        </member>
        <member name="M:ProductApi.Controllers.V1.FileController.UploadFiles(System.Guid)">
            <summary>
            Uploads new files.
            </summary>
            <remarks>
            Sample request:
            
                POST api/products/844288e4-630d-42e7-9667-243bc655569f/files
                body: files to upload
            </remarks>
            <param name="productId">The ID of the category for product.</param>
            <returns>The newly created files' information.</returns>
            <response code="201">Returns the newly created files names.</response>
            <response code="404">If the product with the given ID is not found.</response>
            <response code="415">If the header is incorrect.</response>
            <response code="401">If the request lacks valid authentication credentials.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.FileController.DeleteFile(System.Guid,System.Guid)">
            <summary>
            Deletes a specific file by its unique identifier.
            </summary>
            <remarks>
            Sample request:
            
                DELETE api/products/844288e4-630d-42e7-9667-243bc655569f/files
            </remarks>
            <param name="productId">The ID of the product.</param>
            <param name="fileId">The ID of the file.</param>
            <returns>No content if successful, otherwise returns an error message.</returns>
            <response code="204">If the file is successfully deleted.</response>
            <response code="404">If the file or product with the given ID is not found.</response>
            <response code="401">If the request lacks valid authentication credentials.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.PriceHistoryController.GetPricesHistoryForProduct(System.Guid,ProductApi.Shared.Model.PriceHistoryDtos.PriceHistoryParameters)">
            <summary>
            Retrieves the list of the entire price history.
            </summary>
            <remarks>
            Sample request:
            
                GET api/products/d7840956-951b-4079-9e99-c09c1726d5d2/prices-history
            </remarks>
            <param name="productId">The ID of the product for prices to retrieve.</param>
            <param name="priceHistoryParameters">The container holds specific parameters for the price history.</param>
            <returns>A list of prices.</returns>
            <response code="200">Returns the list of prices.</response>
            <response code="404">If the product with the given ID is not found.</response>
            <response code="422">If the price history parameters validation fails.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.PriceHistoryController.GetPriceHistoryForProduct(System.Guid,System.Guid)">
            <summary>
            Retrieves the list of the entire price history for a product based on its product ID.
            </summary>
            <remarks>
            Sample request:
            
                GET api/products/d7840956-951b-4079-9e99-c09c1726d5d2/prices-history/fd28518a-cfad-48d3-85fb-1119bfbbba31
            </remarks>
            <param name="productId">The ID of the product for pirce history to retrieve.</param>
            <param name="priceHistoryId">The ID of the category price history.</param>
            <returns>The requested price history.</returns>
            <response code="200">Returns the requested price history.</response>
            <response code="404">If the price history or product with the given ID is not found.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.PriceHistoryController.CreatePriceHistoryForProduct(System.Guid,ProductApi.Shared.Model.PriceHistoryDtos.CreatePriceHistoryDto)">
            <summary>
            Creates a new price.
            </summary>
            <remarks>
            Sample request:
            
                POST api/products/d7840956-951b-4079-9e99-c09c1726d5d2/prices-history
                {        
                  "startDate": "11/20/2023",
                  "endDate": "12/20/2023",
                  "priceValue": "44.44"        
                }
            </remarks>
            <param name="productId">The ID of the product for price history.</param>
            <param name="priceHistory">The created price hsitory information</param>
            <returns>A newly created pprice</returns>
            <response code="201">Returns the newly created item</response>
            <response code="400">If the updated price is null.</response>
            <response code="422">f the model is invalid or the price history information is incomplete.</response>
            <response code="401">If the request lacks valid authentication credentials.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.PriceHistoryController.UpdatePriceHistoryForProduct(System.Guid,System.Guid,ProductApi.Shared.Model.PriceHistoryDtos.UpdatePriceHistoryDto)">
            <summary>
            Updates a specific price by its unique identifier.
            </summary>
            <remarks>
            Sample request:
            
                PUT api/products/d7840956-951b-4079-9e99-c09c1726d5d2/prices-history
                {        
                  "startDate": "11/20/2023",
                  "endDate": "12/20/2023",
                  "priceValue": "44.44"        
                }
            </remarks>
            <param name="productId">The ID of the product to update.</param>
            <param name="priceHistoryId">The ID of the price history to update.</param>
            <param name="priceHistory">The updated price history information.</param>
            <returns>The updated product.</returns>
            <response code="204">If the price history is successfully updated.</response>
            <response code="400">If the updated price history is null.</response>
            <response code="404">If the product or price history with the given ID is not found.</response>
            <response code="422">If the model is invalid or the price history information is incomplete.</response>
            <response code="401">If the request lacks valid authentication credentials.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.PriceHistoryController.DeletePriceHistoryForProduct(System.Guid,System.Guid)">
            <summary>
            Deletes a specific price by its unique identifier.
            </summary>
            <remarks>
            Sample request:
            
                DELETE api/products/d7840956-951b-4079-9e99-c09c1726d5d2/prices-history/844288e4-630d-42e7-9667-243bc655569f
            </remarks>
            <param name="productId">The ID of the product for prices.</param>
            <param name="priceHistoryId">The ID of the price history to delete.</param>
            <returns>No content if successful, otherwise returns an error message.</returns>
            <response code="204">If the price history is successfully deleted.</response>
            <response code="404">If the price history or product with the given ID is not found.</response>
            <response code="401">If the request lacks valid authentication credentials.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.PriceHistoryController.GetPriceHistoryOptions">
            <summary>
            Returns an Allow header containing the allowable HTTP methods.
            </summary>
        </member>
        <member name="M:ProductApi.Controllers.V1.ProductController.GetProductsForCategory(System.Guid,ProductApi.Shared.Model.ProductDtos.V1.ProductParameters)">
            <summary>
            Gets the list of all products by category.
            </summary>
            <remarks>
            Sample request:
            
                GET api/categories/d7840956-951b-4079-9e99-c09c1726d5d2/products
            </remarks>
            <param name="categoryId">The ID of the category for products to retrieve.</param>
            <param name="productParameters">The container holds specific parameters for the product.</param>
            <returns>A list of products.</returns>
            <response code="200">Returns the list of products.</response>
            <response code="404">If the category with the given ID is not found.</response>
            <response code="422">If the product parameters validation fails</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.ProductController.GetProductForCategory(System.Guid,System.Guid)">
            <summary>
            Retrieves a specific product by its unique identifier.
            </summary>
            <remarks>
            Sample request:
            
                GET api/categories/d7840956-951b-4079-9e99-c09c1726d5d2/products/fd28518a-cfad-48d3-85fb-1119bfbbba31
            </remarks>
            <param name="categoryId">The ID of the category for product to retrieve.</param>
            <param name="productId">The ID of the product to retrieve.</param>
            <returns>The requested product.</returns>
            <response code="200">Returns the requested product.</response>
            <response code="404">If the cateogry or product with the given ID is not found.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.ProductController.CreateProductForCategory(System.Guid,ProductApi.Shared.Model.ProductDtos.CreateProductDto)">
            <summary>
            Creates a new product.
            </summary>
            <remarks>
            Sample request:
            
                POST api/categories/d7840956-951b-4079-9e99-c09c1726d5d2/products
                {        
                  "productName": "Andrew",
                  "serialNumber": "123456",
                  "price": "44.44",
                  "stock": "44",
                  "description": "Lorem ipsum dolor sit amet, consectetur adipiscing",
                  "color": "Pink",
                  "weight": "44",
                  "size": "4"
                }
            </remarks>
            <param name="categoryId">The ID of the category for product.</param>
            <param name="product">The created rproduct information</param>
            <returns>A newly created product.</returns>
            <response code="201">Returns the newly created item</response>
            <response code="400">If the updated product is null.</response>
            <response code="422">If the model is invalid or the product information is incomplete.</response>
            <response code="401">If the request lacks valid authentication credentials.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.ProductController.UpdateProductForCategory(System.Guid,System.Guid,ProductApi.Shared.Model.ProductDtos.UpdateProductDto)">
            <summary>
            Updates a specific product by its unique identifier.
            </summary>
            <remarks>
            Sample request:
            
                PUT api/categories/d7840956-951b-4079-9e99-c09c1726d5d2/products/844288e4-630d-42e7-9667-243bc655569f
                {        
                  "productName": "Andrew",
                  "serialNumber": "123456",
                  "price": "44.44",
                  "stock": "44",
                  "description": "Lorem ipsum dolor sit amet, consectetur adipiscing",
                  "color": "Pink",
                  "weight": "44",
                  "size": "4"
                }
            </remarks>
            <param name="categoryId">The ID of the category for product.</param>
            <param name="productId">The ID of the product to update.</param>
            <param name="product">The updated product information.</param>
            <returns>The updated product.</returns>
            <response code="204">If the product is successfully updated.</response>
            <response code="400">If the updated product is null.</response>
            <response code="404">If the cateogry or product with the given ID is not found.</response>
            <response code="422">If the model is invalid or the product information is incomplete.</response>
            <response code="401">If the request lacks valid authentication credentials.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.ProductController.DeleteProductForCategory(System.Guid,System.Guid)">
            <summary>
            Deletes a specific product by its unique identifier.
            </summary>
            <remarks>
            Sample request:
            
                DELETE api/categories/d7840956-951b-4079-9e99-c09c1726d5d2/products/844288e4-630d-42e7-9667-243bc655569f
            </remarks>
            <param name="categoryId">The ID of the category for product.</param>
            <param name="productId">The ID of the product to delete.</param>
            <returns>No content if successful, otherwise returns an error message.</returns>
            <response code="204">If the product is successfully deleted.</response>
            <response code="404">If the product or category with the given ID is not found.</response>
            <response code="401">If the request lacks valid authentication credentials.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.ProductController.GetProductOptions">
            <summary>
            Returns an Allow header containing the allowable HTTP methods.
            </summary>
        </member>
        <member name="M:ProductApi.Controllers.V1.ReviewController.GetReviewsForProduct(System.Guid,ProductApi.Shared.Model.ReviewDtos.ReviewParameters)">
            <summary>
            Gets the list of all reviews by product.
            </summary>
            <remarks>
            Sample request:
            
                GET api/products/d7840956-951b-4079-9e99-c09c1726d5d2/reviews
            </remarks>
            <param name="productId">The ID of the product for reviews to retrieve.</param>
            <param name="reviewParameters">The container holds specific parameters for the review.</param>
            <returns>A list of reviews.</returns>
            <response code="200">Returns the list of reviews.</response>
            <response code="404">If the product with the given ID is not found.</response>
            <response code="422">If the review parameters validation fails.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.ReviewController.GetReviewForProduct(System.Guid,System.Guid)">
            <summary>
            Retrieves a specific review by its unique identifier.
            </summary>
            <remarks>
            Sample request:
            
                GET api/products/d7840956-951b-4079-9e99-c09c1726d5d2/reviews/844288e4-630d-42e7-9667-243bc655569f
            </remarks>
            <param name="productId">The ID of the product for review to retrieve.</param>
            <param name="reviewId">The ID of the review.</param>
            <returns>The requested review.</returns>
            <response code="200">Returns the requested review.</response>
            <response code="404">If the review or product with the given ID is not found.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.ReviewController.CreateReviewForProduct(System.Guid,ProductApi.Shared.Model.ReviewDtos.CreateReviewDto)">
            <summary>
            Creates a new review.
            </summary>
            <remarks>
            Sample request:
            
                POST api/products/d7840956-951b-4079-9e99-c09c1726d5d2/reviews/844288e4-630d-42e7-9667-243bc655569f
                {        
                  "description": "Lorem ipsum dolor sit amet, consectetur adipiscing",
                  "rating": "4"
                }
            </remarks>
            <param name="productId">The ID of the product for review.</param>
            <param name="review">The created review information</param>
            <returns>A newly created review.</returns>
            <response code="201">Returns the newly created item.</response>
            <response code="400">If the updated review is null.</response>
            <response code="422">If the model is invalid or the review information is incomplete.</response>
            <response code="401">If the request lacks valid authentication credentials.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.ReviewController.UpdateReviewForProduct(System.Guid,System.Guid,ProductApi.Shared.Model.ReviewDtos.UpdateReviewDto)">
            <summary>
            Updates a specific review by its unique identifier.
            </summary>
            <remarks>
            Sample request:
            
                PUT api/products/d7840956-951b-4079-9e99-c09c1726d5d2/reviews
                {        
                  "description": "Lorem ipsum dolor sit amet, consectetur adipiscing",
                  "rating": "4"  
                }
            </remarks>
            <param name="productId">The ID of the product for review.</param>
            <param name="reviewId">The ID of the review to update.</param>
            <param name="review">The updated review information.</param>
            <returns>The updated review.</returns>
            <response code="204">If the review is successfully updated.</response>
            <response code="400">If the updated review is null.</response>
            <response code="404">If the review or product with the given ID is not found.</response>
            <response code="422">If the model is invalid or the review information is incomplete.</response>
            <response code="401">If the request lacks valid authentication credentials.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.ReviewController.DeleteReviewForProduct(System.Guid,System.Guid)">
            <summary>
            Deletes a specific review by its unique identifier.
            </summary>
            <remarks>
            Sample request:
            
                DELETE api/products/d7840956-951b-4079-9e99-c09c1726d5d2/reviews/844288e4-630d-42e7-9667-243bc655569f
            </remarks>
            <param name="productId">The ID of the product for reviews.</param>
            <param name="reviewId">The ID of the product to delete.</param>
            <returns>No content if successful, otherwise returns an error message.</returns>
            <response code="204">If the review is successfully deleted.</response>
            <response code="404">If the review or product with the given ID is not found.</response>
            <response code="401">If the request lacks valid authentication credentials.</response>
        </member>
        <member name="M:ProductApi.Controllers.V1.ReviewController.GetReviewOptions">
            <summary>
            Returns an Allow header containing the allowable HTTP methods.
            </summary>
        </member>
        <member name="M:ProductApi.Controllers.V1.RootController.GetRoot(System.String)">
            <summary>
            Retrieves the root information of the API.
            </summary>
            <param name="mediaType"></param>
            <returns>Returns the list of links.</returns>
        </member>
    </members>
</doc>
